---
- name: Launch an EC2 instance
  hosts: localhost
  connection: local
  gather_facts: false
  roles:
    - role: ec2

- name: Setup the EC2 instance
  hosts: launched
  gather_facts: true
  remote_user: ec2-user
  become: true

  pre_tasks:
    - set_fact:
        ansible_distribution_major_version: 6
      when: ansible_distribution == "Amazon"

  roles:
    - role: jdauphant.nginx
      nginx_http_params:
        - gzip on
        - gzip_types text/plain text/xml text/css application/xml application/javascript
        - gzip_proxied any
        - gzip_vary on
      nginx_sites:
        default:
            - listen 80
            - root {{ document_root }}
            - index index.php index.html index.htm
            - recursive_error_pages off
            - port_in_redirect off
            - |
              location / {
                  if (-f $request_filename) {
                      expires 1d;
                      break;
                  }
                  if ($uri ~ "^(.+?\.php?)(/.*)$") {
                      set $path_info $2;
                  }
                  if (!-e $request_filename) {
                      rewrite ^(.+)$ /index.php last;
                  }
              }
            - |
              location ~ \.php$ {
                  include       fastcgi_params;
                  fastcgi_pass  unix:/var/run/php-fpm/www.sock;
                  fastcgi_index index.php;
                  fastcgi_param URI $uri;
                  fastcgi_param SERVER_NAME $host;
                  fastcgi_param REQUEST_METHOD $request_method;
                  fastcgi_param SCRIPT_FILENAME {{ document_root }}$fastcgi_script_name;
                  fastcgi_read_timeout 30;
              }
            - |
              location ~ /\.ht {
                  deny all;
              }
    - role: php # todo: change to some galaxy role
    - role: geerlingguy.git
    - role: geerlingguy.composer
    - role: mariadb # todo: make PR to bertvv.mariadb to support amazon linux
    - role: permissions

- name: Setup a concrete5
  hosts: launched
  gather_facts: true
  remote_user: ec2-user
  become: true
  become_user: nginx

  roles:
    - role: concrete5 # todo: separate to our galaxy role